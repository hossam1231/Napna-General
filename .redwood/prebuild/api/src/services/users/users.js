import { db } from "../../lib/db";

// Only to be used on the api side
export const getCustomerId = async ({
  id
}) => {
  return await db.user.findUnique({
    where: {
      id: id
    }
  });
};
export const getUserByCustomerId = ({
  id
}) => {
  return db.user.findUnique({
    where: {
      id
    },
    select: {
      name: true,
      email: true
    }
  });
};
export const updateUserByCustomerId = ({
  id,
  payload
}) => {
  return db.user.update({
    where: {
      id
    },
    data: payload
  });
};

// update db if name and email has changed
export const handleDBSync = async (id, nextName, nextEmail) => {
  const customer = await getUserByCustomerId({
    id
  });
  if (nextEmail === customer.email && nextName === customer.name) {
    return;
  }
  const payload = {};
  if (nextEmail !== customer.email) {
    payload.email = nextEmail;
  }
  if (nextName !== customer.name) {
    payload.name = nextName;
  }
  return await updateUserByCustomerId({
    id,
    payload
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkYiIsImdldEN1c3RvbWVySWQiLCJpZCIsInVzZXIiLCJmaW5kVW5pcXVlIiwid2hlcmUiLCJnZXRVc2VyQnlDdXN0b21lcklkIiwic2VsZWN0IiwibmFtZSIsImVtYWlsIiwidXBkYXRlVXNlckJ5Q3VzdG9tZXJJZCIsInBheWxvYWQiLCJ1cGRhdGUiLCJkYXRhIiwiaGFuZGxlREJTeW5jIiwibmV4dE5hbWUiLCJuZXh0RW1haWwiLCJjdXN0b21lciJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2FwaS9zcmMvc2VydmljZXMvdXNlcnMvdXNlcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGIgfSBmcm9tICdzcmMvbGliL2RiJ1xuXG4vLyBPbmx5IHRvIGJlIHVzZWQgb24gdGhlIGFwaSBzaWRlXG5leHBvcnQgY29uc3QgZ2V0Q3VzdG9tZXJJZCA9IGFzeW5jICh7IGlkIH0pID0+IHtcbiAgcmV0dXJuIGF3YWl0IGRiLnVzZXIuZmluZFVuaXF1ZSh7XG4gICAgd2hlcmU6IHsgaWQ6IGlkIH0sXG4gIH0pXG59XG5cbmV4cG9ydCBjb25zdCBnZXRVc2VyQnlDdXN0b21lcklkID0gKHsgaWQgfSkgPT4ge1xuICByZXR1cm4gZGIudXNlci5maW5kVW5pcXVlKHtcbiAgICB3aGVyZToge1xuICAgICAgaWQsXG4gICAgfSxcbiAgICBzZWxlY3Q6IHtcbiAgICAgIG5hbWU6IHRydWUsXG4gICAgICBlbWFpbDogdHJ1ZSxcbiAgICB9LFxuICB9KVxufVxuXG5leHBvcnQgY29uc3QgdXBkYXRlVXNlckJ5Q3VzdG9tZXJJZCA9ICh7IGlkLCBwYXlsb2FkIH0pID0+IHtcbiAgcmV0dXJuIGRiLnVzZXIudXBkYXRlKHtcbiAgICB3aGVyZToge1xuICAgICAgaWQsXG4gICAgfSxcbiAgICBkYXRhOiBwYXlsb2FkLFxuICB9KVxufVxuXG4vLyB1cGRhdGUgZGIgaWYgbmFtZSBhbmQgZW1haWwgaGFzIGNoYW5nZWRcbmV4cG9ydCBjb25zdCBoYW5kbGVEQlN5bmMgPSBhc3luYyAoaWQsIG5leHROYW1lLCBuZXh0RW1haWwpID0+IHtcbiAgY29uc3QgY3VzdG9tZXIgPSBhd2FpdCBnZXRVc2VyQnlDdXN0b21lcklkKHsgaWQgfSlcblxuICBpZiAobmV4dEVtYWlsID09PSBjdXN0b21lci5lbWFpbCAmJiBuZXh0TmFtZSA9PT0gY3VzdG9tZXIubmFtZSkge1xuICAgIHJldHVyblxuICB9XG5cbiAgY29uc3QgcGF5bG9hZCA9IHt9XG5cbiAgaWYgKG5leHRFbWFpbCAhPT0gY3VzdG9tZXIuZW1haWwpIHtcbiAgICBwYXlsb2FkLmVtYWlsID0gbmV4dEVtYWlsXG4gIH1cblxuICBpZiAobmV4dE5hbWUgIT09IGN1c3RvbWVyLm5hbWUpIHtcbiAgICBwYXlsb2FkLm5hbWUgPSBuZXh0TmFtZVxuICB9XG5cbiAgcmV0dXJuIGF3YWl0IHVwZGF0ZVVzZXJCeUN1c3RvbWVySWQoeyBpZCwgcGF5bG9hZCB9KVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxFQUFFOztBQUVYO0FBQ0EsT0FBTyxNQUFNQyxhQUFhLEdBQUcsT0FBTztFQUFFQztBQUFHLENBQUMsS0FBSztFQUM3QyxPQUFPLE1BQU1GLEVBQUUsQ0FBQ0csSUFBSSxDQUFDQyxVQUFVLENBQUM7SUFDOUJDLEtBQUssRUFBRTtNQUFFSCxFQUFFLEVBQUVBO0lBQUc7RUFDbEIsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQUVELE9BQU8sTUFBTUksbUJBQW1CLEdBQUcsQ0FBQztFQUFFSjtBQUFHLENBQUMsS0FBSztFQUM3QyxPQUFPRixFQUFFLENBQUNHLElBQUksQ0FBQ0MsVUFBVSxDQUFDO0lBQ3hCQyxLQUFLLEVBQUU7TUFDTEg7SUFDRixDQUFDO0lBQ0RLLE1BQU0sRUFBRTtNQUNOQyxJQUFJLEVBQUUsSUFBSTtNQUNWQyxLQUFLLEVBQUU7SUFDVDtFQUNGLENBQUMsQ0FBQztBQUNKLENBQUM7QUFFRCxPQUFPLE1BQU1DLHNCQUFzQixHQUFHLENBQUM7RUFBRVIsRUFBRTtFQUFFUztBQUFRLENBQUMsS0FBSztFQUN6RCxPQUFPWCxFQUFFLENBQUNHLElBQUksQ0FBQ1MsTUFBTSxDQUFDO0lBQ3BCUCxLQUFLLEVBQUU7TUFDTEg7SUFDRixDQUFDO0lBQ0RXLElBQUksRUFBRUY7RUFDUixDQUFDLENBQUM7QUFDSixDQUFDOztBQUVEO0FBQ0EsT0FBTyxNQUFNRyxZQUFZLEdBQUcsT0FBT1osRUFBRSxFQUFFYSxRQUFRLEVBQUVDLFNBQVMsS0FBSztFQUM3RCxNQUFNQyxRQUFRLEdBQUcsTUFBTVgsbUJBQW1CLENBQUM7SUFBRUo7RUFBRyxDQUFDLENBQUM7RUFFbEQsSUFBSWMsU0FBUyxLQUFLQyxRQUFRLENBQUNSLEtBQUssSUFBSU0sUUFBUSxLQUFLRSxRQUFRLENBQUNULElBQUksRUFBRTtJQUM5RDtFQUNGO0VBRUEsTUFBTUcsT0FBTyxHQUFHLENBQUMsQ0FBQztFQUVsQixJQUFJSyxTQUFTLEtBQUtDLFFBQVEsQ0FBQ1IsS0FBSyxFQUFFO0lBQ2hDRSxPQUFPLENBQUNGLEtBQUssR0FBR08sU0FBUztFQUMzQjtFQUVBLElBQUlELFFBQVEsS0FBS0UsUUFBUSxDQUFDVCxJQUFJLEVBQUU7SUFDOUJHLE9BQU8sQ0FBQ0gsSUFBSSxHQUFHTyxRQUFRO0VBQ3pCO0VBRUEsT0FBTyxNQUFNTCxzQkFBc0IsQ0FBQztJQUFFUixFQUFFO0lBQUVTO0VBQVEsQ0FBQyxDQUFDO0FBQ3RELENBQUMifQ==
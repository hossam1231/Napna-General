{
  "version": 3,
  "sources": ["../../../src/functions/sessions/sessions.js"],
  "sourcesContent": ["import { logger } from 'src/lib/logger'\nimport { getSession } from 'src/services/checkouts'\n\n/**\n * The handler function is your code that processes http request events.\n * You can use return and throw to send a response or error, respectively.\n *\n * Important: When deployed, a custom serverless function is an open API endpoint and\n * is your responsibility to secure appropriately.\n *\n * @see {@link https://redwoodjs.com/docs/serverless-functions#security-considerations|Serverless Function Considerations}\n * in the RedwoodJS documentation for more information.\n *\n * @typedef { import('aws-lambda').APIGatewayEvent } APIGatewayEvent\n * @typedef { import('aws-lambda').Context } Context\n * @param { APIGatewayEvent } event - an object which contains information from the invoker.\n * @param { Context } context - contains information about the invocation,\n * function, and execution environment.\n */\nexport const handler = async ({ body }, _context) => {\n  logger.info('Invoked retrieveCheckoutSession function')\n\n  const { id } = JSON.parse(body)\n\n  const session = await getSession({ id })\n\n  return {\n    statusCode: 200,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(session),\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oBAAe;AACf,uBAAmB;AAkBZ,MAAMA,UAAU,OAAO;EAAEC;AAAK,GAAGC,aAAa;AACnDC,uBAAOC,KAAK,0CAA0C;AAEtD,QAAM;IAAEC;EAAG,IAAIC,KAAKC,MAAMN,IAAI;AAE9B,QAAMO,UAAU,UAAMC,6BAAW;IAAEJ;EAAG,CAAC;AAEvC,SAAO;IACLK,YAAY;IACZC,SAAS;MACP,gBAAgB;IAClB;IACAV,UAAM,iBAAAW,SAAeJ,OAAO;EAC9B;AACF;",
  "names": ["handler", "body", "_context", "logger", "info", "id", "JSON", "parse", "session", "getSession", "statusCode", "headers", "_JSON$stringify"]
}

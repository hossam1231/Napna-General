{
  "version": 3,
  "sources": ["../../../src/functions/stripeWebhooks/stripeWebhooks.js"],
  "sourcesContent": ["import { handleStripeWebhooks } from 'src/lib/stripe'\nimport { handleDBSync } from 'src/services/users'\n\n/**\n * The handler function is your code that processes http request events.\n * You can use return and throw to send a response or error, respectively.\n *\n * Important: When deployed, a custom serverless function is an open API endpoint and\n * is your responsibility to secure appropriately.\n *\n * @see {@link https://redwoodjs.com/docs/serverless-functions#security-considerations|Serverless Function Considerations}\n * in the RedwoodJS documentation for more information.\n *\n * @typedef { import('aws-lambda').APIGatewayEvent } APIGatewayEvent\n * @typedef { import('aws-lambda').Context } Context\n * @param { APIGatewayEvent } event - an object which contains information from the invoker.\n * @param { Context } context - contains information about the invocation,\n * function, and execution environment.\n */\n\n/*\n * Stripe documentation recommends making any calls to db for syncing inside of webhooks\n */\nexport const handler = async (event, context) => {\n  // Create services to handle webhooks\n  const results = await handleStripeWebhooks(event, context, {\n    'checkout.session.completed': (e) => e.type,\n    'checkout.session.async_payment_succeeded': (e) => e.type,\n    'checkout.session.async_payment_failed': (e) => e.type,\n    'customer.updated': async (e) => {\n      const {\n        data: { object },\n      } = JSON.parse(e.body)\n      const results = await handleDBSync(object.id, object.name, object.email)\n      if (results) {\n        console.log('Database has been synced successfully')\n      }\n    },\n  })\n\n  return {\n    statusCode: 200,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      data: results,\n    }),\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oBAA6B;AAC7B,mBAAqB;AAsBd,MAAMA,UAAU,OAAOC,OAAOC,YAAY;AAE/C,QAAMC,UAAU,UAAMC,oCAAqBH,OAAOC,SAAS;IACzD,8BAA+BG,OAAMA,EAAEC;IACvC,4CAA6CD,OAAMA,EAAEC;IACrD,yCAA0CD,OAAMA,EAAEC;IAClD,oBAAoB,OAAOD,MAAM;AAC/B,YAAM;QACJE,MAAM;UAAEC;QAAO;MACjB,IAAIC,KAAKC,MAAML,EAAEM,IAAI;AACrB,YAAMR,WAAU,UAAMS,2BAAaJ,OAAOK,IAAIL,OAAOM,MAAMN,OAAOO,KAAK;AACvE,UAAIZ,UAAS;AACXa,gBAAQC,IAAI,uCAAuC;MACrD;IACF;EACF,CAAC;AAED,SAAO;IACLC,YAAY;IACZC,SAAS;MACP,gBAAgB;IAClB;IACAR,UAAM,iBAAAS,SAAe;MACnBb,MAAMJ;IACR,CAAC;EACH;AACF;",
  "names": ["handler", "event", "context", "results", "handleStripeWebhooks", "e", "type", "data", "object", "JSON", "parse", "body", "handleDBSync", "id", "name", "email", "console", "log", "statusCode", "headers", "_JSON$stringify"]
}

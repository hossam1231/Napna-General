{
  "version": 3,
  "sources": ["../../../src/services/users/users.js"],
  "sourcesContent": ["import { db } from 'src/lib/db'\n\n// Only to be used on the api side\nexport const getCustomerId = async ({ id }) => {\n  return await db.user.findUnique({\n    where: { id: id },\n  })\n}\n\nexport const getUserByCustomerId = ({ id }) => {\n  return db.user.findUnique({\n    where: {\n      id,\n    },\n    select: {\n      name: true,\n      email: true,\n    },\n  })\n}\n\nexport const updateUserByCustomerId = ({ id, payload }) => {\n  return db.user.update({\n    where: {\n      id,\n    },\n    data: payload,\n  })\n}\n\n// update db if name and email has changed\nexport const handleDBSync = async (id, nextName, nextEmail) => {\n  const customer = await getUserByCustomerId({ id })\n\n  if (nextEmail === customer.email && nextName === customer.name) {\n    return\n  }\n\n  const payload = {}\n\n  if (nextEmail !== customer.email) {\n    payload.email = nextEmail\n  }\n\n  if (nextName !== customer.name) {\n    payload.name = nextName\n  }\n\n  return await updateUserByCustomerId({ id, payload })\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;;;;;;;;gBAAW;AAGJ,MAAMA,gBAAgB,OAAO;EAAEC;AAAG,MAAM;AAC7C,SAAO,MAAMC,aAAGC,KAAKC,WAAW;IAC9BC,OAAO;MAAEJ;IAAO;EAClB,CAAC;AACH;AAEO,MAAMK,sBAAsB,CAAC;EAAEL;AAAG,MAAM;AAC7C,SAAOC,aAAGC,KAAKC,WAAW;IACxBC,OAAO;MACLJ;IACF;IACAM,QAAQ;MACNC,MAAM;MACNC,OAAO;IACT;EACF,CAAC;AACH;AAEO,MAAMC,yBAAyB,CAAC;EAAET;EAAIU;AAAQ,MAAM;AACzD,SAAOT,aAAGC,KAAKS,OAAO;IACpBP,OAAO;MACLJ;IACF;IACAY,MAAMF;EACR,CAAC;AACH;AAGO,MAAMG,eAAe,OAAOb,IAAIc,UAAUC,cAAc;AAC7D,QAAMC,WAAW,MAAMX,oBAAoB;IAAEL;EAAG,CAAC;AAEjD,MAAIe,cAAcC,SAASR,SAASM,aAAaE,SAAST,MAAM;AAC9D;EACF;AAEA,QAAMG,UAAU,CAAC;AAEjB,MAAIK,cAAcC,SAASR,OAAO;AAChCE,YAAQF,QAAQO;EAClB;AAEA,MAAID,aAAaE,SAAST,MAAM;AAC9BG,YAAQH,OAAOO;EACjB;AAEA,SAAO,MAAML,uBAAuB;IAAET;IAAIU;EAAQ,CAAC;AACrD;",
  "names": ["getCustomerId", "id", "db", "user", "findUnique", "where", "getUserByCustomerId", "select", "name", "email", "updateUserByCustomerId", "payload", "update", "data", "handleDBSync", "nextName", "nextEmail", "customer"]
}
